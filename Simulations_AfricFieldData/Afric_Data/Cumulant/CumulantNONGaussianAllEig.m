%%Espirit Algorithm Fourth order
clear;clc;
%% Initializations
fid(1)=fopen('ref_hh.dat','r');fid(2)=fopen('ref_vv.dat','r');
fid(3)=fopen('ref_xx.dat','r');fid(4)=fopen('offset_hh.dat','r');
fid(5)=fopen('offset_vv.dat','r');fid(6)=fopen('offset_xx.dat','r');

h1=fread(fid(1),[730 1662],'single');h2=fread(fid(4),[730 1662],'single');
v1=fread(fid(2),[730 1662],'single');v2=fread(fid(5),[730 1662],'single');
x1=fread(fid(3),[730 1662],'single');x2=fread(fid(6),[730 1662],'single');

for close = 1:6;
    fclose(fid(close));
end

hh.ref=h1(1:2:729,:) + 1i*h1(2:2:730,:); hh.off=h2(1:2:729,:) + 1i*h2(2:2:730,:);
vv.ref=v1(1:2:729,:) + 1i*v1(2:2:730,:); vv.off=v2(1:2:729,:) + 1i*v2(2:2:730,:);
xx.ref=x1(1:2:729,:) + 1i*x1(2:2:730,:); xx.off=x2(1:2:729,:) + 1i*x2(2:2:730,:);

hhref = hh.ref;hhoff = hh.off;
vvref = vv.ref;vvoff = vv.off;
xxref = xx.ref;xxoff = xx.off;

[ylength,xlength] = size(hhoff);
r = 7; c = 7;
L = r+c+1;
Window = (L)^2;
g = zeros(ylength-r,xlength-c);
v = zeros(ylength-r,xlength-c);

one_4 = zeros(ylength-r,xlength-c);
two_4 = zeros(ylength-r,xlength-c);
three_4 = zeros(ylength-r,xlength-c);
four_4 = zeros(ylength-r,xlength-c);
five_4 = zeros(ylength-r,xlength-c);
six_4 = zeros(ylength-r,xlength-c);

%% Cumulant Martix Calculations
%%%%%%%%%%%%%%%%%%%%%Pull rand line%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
for row = r+1:ylength-r;
    for col = c+1:xlength-c;
        
        Var(1:L,1:L) = hhref(row-r:row+r,col-c:col+c);
        sh1(1,1:Window) = reshape(Var,1,Window);
        
        Var(1:L,1:L) = hhoff(row-r:row+r,col-c:col+c);
        sh2(1,1:Window) = reshape(Var,1,Window);
        
        Var(1:L,1:L) = vvref(row-r:row+r,col-c:col+c);
        sv1(1,1:Window) = reshape(Var,1,Window);
        
        Var(1:L,1:L) = vvoff(row-r:row+r,col-c:col+c);
        sv2(1,1:Window) = reshape(Var,1,Window);
        
        Var(1:L,1:L) = xxref(row-r:row+r,col-c:col+c);
        sx1(1,1:Window) = reshape(Var,1,Window);
        
        Var(1:L,1:L) = xxoff(row-r:row+r,col-c:col+c);
        sx2(1,1:Window) = reshape(Var,1,Window);
        
        %% Forming the Six Arrays
        S1_2 = [sh1
            sv1
            sx1];
        
        S2_2 = [sh2
            sv2
            sx2];
        
        R11_2 = S1_2*S1_2.'/Window;
        E_h1_h1 = R11_2(1,1);
        E_h1_v1 = R11_2(1,2);
        E_h1_x1 = R11_2(1,3);
        E_v1_v1 = R11_2(2,2);
        E_v1_x1 = R11_2(2,3);
        E_x1_x1 = R11_2(3,3);
        
        R11c_2 = S1_2*S1_2'/Window;
        E_h1_h1c = R11c_2(1,1);
        E_h1_v1c = R11c_2(1,2);
        E_h1_x1c = R11c_2(1,3);
        E_v1_h1c = R11c_2(2,1);
        E_v1_v1c = R11c_2(2,2);
        E_v1_x1c = R11c_2(2,3);
        E_x1_h1c = R11c_2(3,1);
        E_x1_v1c = R11c_2(3,2);
        E_x1_x1c = R11c_2(3,3);
        
        R22_2 = S2_2*S2_2.'/Window;
        E_h2_h2 = R22_2(1,1);
        E_h2_v2 = R22_2(1,2);
        E_h2_x2 = R22_2(1,3);
        E_v2_v2 = R22_2(2,2);
        E_v2_x2 = R22_2(2,3);
        E_x2_x2 = R22_2(3,3);
        
        R12c_2 = S1_2*S2_2'/Window;
        E_h1_h2c = R12c_2(1,1);
        E_h1_v2c = R12c_2(1,2);
        E_h1_x2c = R12c_2(1,3);
        E_v1_h2c = R12c_2(2,1);
        E_v1_v2c = R12c_2(2,2);
        E_v1_x2c = R12c_2(2,3);
        E_x1_h2c = R12c_2(3,1);
        E_x1_v2c = R12c_2(3,2);
        E_x1_x2c = R12c_2(3,3);
        
        S1_4 = [sh1.*sh1
            sv1.*sv1
            sx1.*sx1
            sh1.*sv1
            sh1.*sx1
            sv1.*sx1];
        
        S2_4 = [sh2.*sh2
            sv2.*sv2
            sx2.*sx2
            sh2.*sv2
            sh2.*sx2
            sv2.*sx2];
        
        R1_4 = S1_4*S1_4'/Window;
        R2_4 = S1_4*S2_4'/Window;
        
              %% Forming Cumulant One Matrix
        %% HH
        Cumulant_1(1,1) = R1_4(1,1) - E_h1_h1*conj(E_h1_h1)...
            - E_h1_h1c*E_h1_h1c ...
            - E_h1_h1c*E_h1_h1c;
        
        Cumulant_1(1,2) = R1_4(1,2) - E_h1_h1*conj(E_v1_v1)...
            - E_h1_v1c*E_h1_v1c...
            - E_h1_v1c*E_h1_v1c;
        
        Cumulant_1(1,3) = R1_4(1,3) - E_h1_h1*conj(E_x1_x1)...
            - E_h1_x1c*E_h1_x1c...
            - E_h1_x1c*E_h1_x1c;
        
        Cumulant_1(1,4) = R1_4(1,4) - E_h1_h1*conj(E_h1_v1)...
            - E_h1_h1c*E_h1_v1c...
            - E_h1_v1c*E_h1_h1c;
        
        Cumulant_1(1,5) = R1_4(1,5) - E_h1_h1*conj(E_h1_x1)...
            - E_h1_h1c*E_h1_x1c...
            - E_h1_x1c*E_h1_h1c;
        
        Cumulant_1(1,6) = R1_4(1,6) - E_h1_h1*conj(E_v1_x1)...
            - E_h1_v1c*E_h1_x1c...
            - E_h1_x1c*E_h1_v1c;
        %% VV
        Cumulant_1(2,1) = R1_4(2,1) - E_v1_v1*conj(E_h1_h1)...
            - E_v1_h1c*E_v1_h1c...
            - E_v1_h1c*E_v1_h1c;
        
        Cumulant_1(2,2) = R1_4(2,2) - E_v1_v1*conj(E_v1_v1)...
            - E_v1_v1c*E_v1_v1c...
            - E_v1_v1c*E_v1_v1c;
        
        Cumulant_1(2,3) = R1_4(2,3) - E_v1_v1*conj(E_x1_x1)...
            - E_v1_x1c*E_v1_x1c...
            - E_v1_x1c*E_v1_x1c;
        
        Cumulant_1(2,4) = R1_4(2,4) - E_v1_v1*conj(E_h1_v1)...
            - E_v1_h1c*E_v1_v1c...
            - E_v1_v1c*E_v1_h1c;
        
        Cumulant_1(2,5) = R1_4(2,5) - E_v1_v1*conj(E_h1_x1)...
            - E_v1_h1c*E_v1_x1c...
            - E_v1_x1c*E_v1_h1c;
        
        Cumulant_1(2,6) = R1_4(2,6) - E_v1_v1*conj(E_v1_x1)...
            - E_v1_v1c*E_v1_x1c...
            - E_v1_x1c*E_v1_v1c;
        %% XX
        
        Cumulant_1(3,1) = R1_4(3,1) - E_x1_x1*conj(E_h1_h1)...
            - E_x1_h1c*E_x1_h1c...
            - E_x1_h1c*E_x1_h1c;
        
        Cumulant_1(3,2) = R1_4(3,2) - E_x1_x1*conj(E_v1_v1)...
            - E_x1_v1c*E_x1_v1c...
            - E_x1_v1c*E_x1_v1c;
        
        Cumulant_1(3,3) = R1_4(3,3) - E_x1_x1*conj(E_x1_x1)...
            - E_x1_x1c*E_x1_x1c...
            - E_x1_x1c*E_x1_x1c;
        
        Cumulant_1(3,4) = R1_4(3,4) - E_x1_x1*conj(E_h1_v1)...
            - E_x1_h1c*E_x1_v1c...
            - E_x1_v1c*E_x1_h1c;
        
        Cumulant_1(3,5) = R1_4(3,5) - E_x1_x1*conj(E_h1_x1)...
            - E_x1_h1c*E_x1_x1c...
            - E_x1_x1c*E_x1_h1c;
        
        Cumulant_1(3,6) = R1_4(3,6) - E_x1_x1*conj(E_v1_x1)...
            - E_x1_v1c*E_x1_x1c...
            - E_x1_x1c*E_x1_v1c;
        %% HV
        Cumulant_1(4,1) = R1_4(4,1) - E_h1_v1*conj(E_h1_h1)...
            - E_h1_h1c*E_v1_h1c...
            - E_h1_h1c*E_v1_h1c;
        
        Cumulant_1(4,2) = R1_4(4,2) - E_h1_v1*conj(E_v1_v1)...
            - E_h1_v1c*E_v1_v1c...
            - E_h1_v1c*E_v1_v1c;
        
        Cumulant_1(4,3) = R1_4(4,3) - E_h1_v1*conj(E_x1_x1)...
            - E_h1_x1c*E_v1_x1c...
            - E_h1_x1c*E_v1_x1c;
        
        Cumulant_1(4,4) = R1_4(4,4) - E_h1_v1*conj(E_h1_v1)...
            - E_h1_h1c*E_v1_v1c...
            - E_h1_v1c*E_v1_h1c;
        
        Cumulant_1(4,5) = R1_4(4,5) - E_h1_v1*conj(E_h1_x1)...
            - E_h1_h1c*E_v1_x1c...
            - E_h1_x1c*E_v1_h1c;
        
        Cumulant_1(4,6) = R1_4(4,6) - E_h1_v1*conj(E_v1_x1)...
            - E_h1_v1c*E_v1_x1c...
            - E_h1_x1c*E_v1_v1c;
        %% HX
        Cumulant_1(5,1) = R1_4(5,1) - E_h1_x1*conj(E_h1_h1)...
            - E_h1_h1c*E_x1_h1c...
            - E_h1_h1c*E_x1_h1c;
        
        Cumulant_1(5,2) = R1_4(5,2) - E_h1_x1*conj(E_v1_v1)...
            - E_h1_v1c*E_x1_v1c...
            - E_h1_v1c*E_x1_v1c;
        
        Cumulant_1(5,3) = R1_4(5,3) - E_h1_x1*conj(E_x1_x1)...
            - E_h1_x1c*E_x1_x1c...
            - E_h1_x1c*E_x1_x1c;
        
        Cumulant_1(5,4) = R1_4(5,4) - E_h1_x1*conj(E_h1_v1)...
            - E_h1_h1c*E_x1_v1c...
            - E_h1_v1c*E_x1_h1c;
        
        Cumulant_1(5,5) = R1_4(5,5) - E_h1_x1*conj(E_h1_x1)...
            - E_h1_h1c*E_x1_x1c...
            - E_h1_x1c*E_x1_h1c;
        
        Cumulant_1(5,6) = R1_4(5,6) - E_h1_x1*conj(E_v1_x1)...
            - E_h1_v1c*E_x1_x1c...
            - E_h1_x1c*E_x1_v1c;
        %%VX
        Cumulant_1(6,1) = R1_4(6,1) - E_v1_x1*conj(E_h1_h1)...
            - E_v1_h1c*E_x1_h1c...
            - E_v1_h1c*E_x1_h1c;
        
        Cumulant_1(6,2) = R1_4(6,2) - E_v1_x1*conj(E_v1_v1)...
            - E_v1_v1c*E_x1_v1c...
            - E_v1_v1c*E_x1_v1c;
        
        Cumulant_1(6,3) = R1_4(6,3) - E_v1_x1*conj(E_x1_x1)...
            - E_v1_x1c*E_x1_x1c...
            - E_v1_x1c*E_x1_x1c;
        
        Cumulant_1(6,4) = R1_4(6,4) - E_v1_x1*conj(E_h1_v1)...
            - E_v1_h1c*E_x1_v1c...
            - E_v1_v1c*E_x1_h1c;
        
        Cumulant_1(6,5) = R1_4(6,5) - E_v1_x1*conj(E_h1_x1)...
            - E_v1_h1c*E_x1_x1c...
            - E_v1_x1c*E_x1_h1c;
        
        Cumulant_1(6,6) = R1_4(6,6) - E_v1_x1*conj(E_v1_x1)...
            - E_v1_v1c*E_x1_x1c...
            - E_v1_x1c*E_x1_v1c;
        
        %% Forming Cumulant Two Matrix
        %% HH
        Cumulant_2(1,1) = R2_4(1,1) - E_h1_h1*conj(E_h2_h2)...
            - E_h1_h2c*E_h1_h2c...
            - E_h1_h2c*E_h1_h2c;
        
        Cumulant_2(1,2) = R2_4(1,2) - E_h1_h1*conj(E_v2_v2)...
            - E_h1_v2c*E_h1_v2c...
            - E_h1_v2c*E_h1_v2c;
        
        Cumulant_2(1,3) = R2_4(1,3) - E_h1_h1*conj(E_x2_x2)...
            - E_h1_x2c*E_h1_x2c...
            - E_h1_x2c*E_h1_x2c;
        
        Cumulant_2(1,4) = R2_4(1,4) - E_h1_h1*conj(E_h2_v2)...
            - E_h1_h2c*E_h1_v2c...
            - E_h1_v2c*E_h1_h2c;
        
        
        Cumulant_2(1,5) = R2_4(1,5) - E_h1_h1*conj(E_h2_x2)...
            - E_h1_h2c*E_h1_x2c...
            - E_h1_x2c*E_h1_h2c;
        
        Cumulant_2(1,6) = R2_4(1,6) - E_h1_h1*conj(E_v2_x2)...
            - E_h1_v2c*E_h1_x2c...
            - E_h1_x2c*E_h1_v2c;
        %% VV
        Cumulant_2(2,1) = R2_4(2,1) - E_v1_v1*conj(E_h2_h2)...
            - E_v1_h2c*E_v1_h2c...
            - E_v1_h2c*E_v1_h2c;
        
        Cumulant_2(2,2) = R2_4(2,2) - E_v1_v1*conj(E_v2_v2)...
            - E_v1_v2c*E_v1_v2c...
            - E_v1_v2c*E_v1_v2c;
        
        Cumulant_2(2,3) = R2_4(2,3) - E_v1_v1*conj(E_x2_x2)...
            - E_v1_x2c*E_v1_x2c...
            - E_v1_x2c*E_v1_x2c;
        
        Cumulant_2(2,4) = R2_4(2,4) - E_v1_v1*conj(E_h2_v2)...
            - E_v1_h2c*E_v1_v2c...
            - E_v1_v2c*E_v1_h2c;
        
        Cumulant_2(2,5) = R2_4(2,5) - E_v1_v1*conj(E_h2_x2)...
            - E_v1_h2c*E_v1_x2c...
            - E_v1_x2c*E_v1_h2c;
        
        Cumulant_2(2,6) = R2_4(2,6) - E_v1_v1*conj(E_v2_x2)...
            - E_v1_v2c*E_v1_x2c...
            - E_v1_x2c*E_v1_v2c;
        %% XX
        Cumulant_2(3,1) = R2_4(3,1) - E_x1_x1*conj(E_h2_h2)...
            - E_x1_h2c*E_x1_h2c...
            - E_x1_h2c*E_x1_h2c;
        
        Cumulant_2(3,2) = R2_4(3,2) - E_x1_x1*conj(E_v2_v2)...
            - E_x1_v2c*E_x1_v2c...
            - E_x1_v2c*E_x1_v2c;
        
        Cumulant_2(3,3) = R2_4(3,3) - E_x1_x1*conj(E_x2_x2)...
            - E_x1_x2c*E_x1_x2c...
            - E_x1_x2c*E_x1_x2c;
        
        Cumulant_2(3,4) = R2_4(3,4) - E_x1_x1*conj(E_h2_v2)...
            - E_x1_h2c*E_x1_v2c...
            - E_x1_v2c*E_x1_h2c;
        
        Cumulant_2(3,5) = R2_4(3,5) - E_x1_x1*conj(E_h2_x2)...
            - E_x1_h2c*E_x1_x2c...
            - E_x1_x2c*E_x1_h2c;
        
        Cumulant_2(3,6) = R2_4(3,6) - E_x1_x1*conj(E_v2_x2)...
            - E_x1_v2c*E_x1_x2c...
            - E_x1_x2c*E_x1_v2c;
        %% HV
        
        Cumulant_2(4,1) = R2_4(4,1) - E_h1_v1*conj(E_h2_h2)...
            - E_h1_h2c*E_v1_h2c...
            - E_h1_h2c*E_v1_h2c;
        
        Cumulant_2(4,2) = R2_4(4,2) - E_h1_v1*conj(E_v2_v2)...
            - E_h1_v2c*E_v1_v2c...
            - E_h1_v2c*E_v1_v2c;
        
        Cumulant_2(4,3) = R2_4(4,3) - E_h1_v1*conj(E_x2_x2)...
            - E_h1_x2c*E_v1_x2c...
            - E_h1_x2c*E_v1_x2c;
        
        Cumulant_2(4,4) = R2_4(4,4) - E_h1_v1*conj(E_h2_v2)...
            - E_h1_h2c*E_v1_v2c...
            - E_h1_v2c*E_v1_h2c;
        
        Cumulant_2(4,5) = R2_4(4,5) - E_h1_v1*conj(E_h2_x2)...
            - E_h1_h2c*E_v1_x2c...
            - E_h1_x2c*E_v1_h2c;
        
        Cumulant_2(4,6) = R2_4(4,6) - E_h1_v1*conj(E_v2_x2)...
            - E_h1_v2c*E_v1_x2c...
            - E_h1_x2c*E_v1_v2c;
        %% HX
        Cumulant_2(5,1) = R2_4(5,1) - E_h1_x1*conj(E_h2_h2)...
            - E_h1_h2c*E_x1_h2c...
            - E_h1_h2c*E_x1_h2c;
        
        Cumulant_2(5,2) = R2_4(5,2) - E_h1_x1*conj(E_v2_v2)...
            - E_h1_v2c*E_x1_v2c...
            - E_h1_v2c*E_x1_v2c;
        
        Cumulant_2(5,3) = R2_4(5,3) - E_h1_x1*conj(E_x2_x2)...
            - E_h1_x2c*E_x1_x2c...
            - E_h1_x2c*E_x1_x2c;
        
        Cumulant_2(5,4) = R2_4(5,4) - E_h1_x1*conj(E_h2_v2)...
            - E_h1_h2c*E_x1_v2c...
            - E_h1_v2c*E_x1_h2c;
        
        Cumulant_2(5,5) = R2_4(5,5) - E_h1_x1*conj(E_h2_x2)...
            - E_h1_h2c*E_x1_x2c...
            - E_h1_x2c*E_x1_h2c;
        
        Cumulant_2(5,6) = R2_4(5,6) - E_h1_x1*conj(E_v2_x2)...
            - E_h1_v2c*E_x1_x2c...
            - E_h1_x2c*E_x1_v2c;
        % VX
        
        Cumulant_2(6,1) = R2_4(6,1) - E_v1_x1*conj(E_h2_h2)...
            - E_v1_h2c*E_x1_h2c...
            - E_v1_h2c*E_x1_h2c;
        
        Cumulant_2(6,2) = R2_4(6,2) - E_v1_x1*conj(E_v2_v2)...
            - E_v1_v2c*E_x1_v2c...
            - E_v1_v2c*E_x1_v2c;
        
        Cumulant_2(6,3) = R2_4(6,3) - E_v1_x1*conj(E_x2_x2)...
            - E_v1_x2c*E_x1_x2c...
            - E_v1_x2c*E_x1_x2c;
        
        Cumulant_2(6,4) = R2_4(6,4) - E_v1_x1*conj(E_h2_v2)...
            - E_v1_h2c*E_x1_v2c...
            - E_v1_v2c*E_x1_h2c;
        
        Cumulant_2(6,5) = R2_4(6,5) - E_v1_x1*conj(E_h2_x2)...
            - E_v1_h2c*E_x1_x2c...
            - E_v1_x2c*E_x1_h2c;
        
        Cumulant_2(6,6) = R2_4(6,6) - E_v1_x1*conj(E_v2_x2)...
            - E_v1_v2c*E_x1_x2c...
            - E_v1_x2c*E_x1_v2c;
        
        %% ESPRIT Algorithm
        [eigenvec_4,eigenval_4] = eig(pinv(Cumulant_1+0.05*eye(6))*Cumulant_2);
        
        [~,srt_4] = sort(abs(eigenval_4),'descend');
        
        one_4(row,col) = eigenval_4(srt_4(1),srt_4(1));
        two_4(row,col) = eigenval_4(srt_4(2),srt_4(2));
        three_4(row,col) = eigenval_4(srt_4(3),srt_4(3));
        four_4(row,col) = eigenval_4(srt_4(4),srt_4(4));
        five_4(row,col) = eigenval_4(srt_4(5),srt_4(5));
        six_4(row,col) = eigenval_4(srt_4(6),srt_4(6));
        
        
    end
end
%% Plotting gv Results
[x,y] = size(one_4);

Lreshape = x*y;

one(1:Lreshape,1) = reshape(one_4,Lreshape,1);
two(1:Lreshape,1) = reshape(two_4,Lreshape,1);
three(1:Lreshape,1) = reshape(three_4,Lreshape,1);
four(1:Lreshape,1) = reshape(four_4,Lreshape,1);
five(1:Lreshape,1) = reshape(five_4,Lreshape,1);
six(1:Lreshape,1) = reshape(six_4,Lreshape,1);
%% Analyzing
plt = linspace(0,4,100);
figure(1)
subplot(2,3,1)
hist(abs(one),plt)
title('ONE')

% figure(2)
subplot(2,3,2)
hist(abs(two),plt)
title('TWO')

% figure(3)
subplot(2,3,3)
hist(abs(three),plt)
title('THREE')

% figure(4)
subplot(2,3,4)
hist(abs(four),plt)
title('FOUR')

% figure(5)
subplot(2,3,5)
hist(abs(five),plt)
title('FIVE')

% figure(6)
subplot(2,3,6)
hist(abs(six),plt)

title('SIX')